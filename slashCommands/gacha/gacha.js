const { ApplicationCommandType, ApplicationCommandOptionType, CommandInteraction, ActionRowBuilder, ButtonBuilder, ButtonStyle, EmbedBuilder, ButtonInteraction, ModalBuilder, TextInputBuilder, TextInputStyle, ModalSubmitInteraction } = require("discord.js");
const { errorReply, successReply } = require("../../handlers/reply");
const { sql } = require("../..");

module.exports = {
    name : "gacha",
    description : "‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏™‡∏∏‡πà‡∏°",
    type : ApplicationCommandType.ChatInput,
    options : [
        {
            name : "create-gacha",
            description : "‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏™‡∏∏‡πà‡∏°",
            type : ApplicationCommandOptionType.Subcommand,
            options : [
                {
                    name : "name",
                    description : "‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏™‡∏∏‡πà‡∏°",
                    type : ApplicationCommandOptionType.String,
                    required : true
                },{
                    name : "description",
                    description : "‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏™‡∏∏‡πà‡∏°",
                    type : ApplicationCommandOptionType.String,
                    required : true
                },{
                    name : "price",
                    description : "‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏™‡∏∏‡πà‡∏°",
                    type : ApplicationCommandOptionType.Integer,
                    required : true
                }
            ]
        },{
            name : "setup-gacha",
            description : "‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏™‡∏∏‡πà‡∏°",
            type : ApplicationCommandOptionType.Subcommand,
            options : [
                {
                    name : "gacha-id",
                    description : "ID ‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏™‡∏∏‡πà‡∏°",
                    type : ApplicationCommandOptionType.Integer,
                    required : true
                }
            ]
        },{
            name : "create-item",
            description : "‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏≠‡πÄ‡∏ó‡∏°",
            type : ApplicationCommandOptionType.Subcommand,
        },{
            name : "setup-item",
            description : "‡∏•‡∏ö‡πÑ‡∏≠‡πÄ‡∏ó‡∏°",
            type : ApplicationCommandOptionType.Subcommand,
            options : [
                {
                    name : "item-id",
                    description : "ID ‡πÑ‡∏≠‡πÄ‡∏ó‡∏°",
                    type : ApplicationCommandOptionType.Integer,
                    required : true
                }
            ]
        },
        {
            name : "add-item",
            description : "‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏≠‡πÄ‡∏ó‡∏°",
            type : ApplicationCommandOptionType.Subcommand,
            options : [
                {
                    name : "gacha-id",
                    description : "ID ‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏™‡∏∏‡πà‡∏°",
                    type : ApplicationCommandOptionType.Integer,
                    required : true
                },{
                    name : "item-id",
                    description : "ID ‡πÑ‡∏≠‡πÄ‡∏ó‡∏°",
                    type : ApplicationCommandOptionType.Integer,
                    required : true
                },{
                    name : "rate" ,
                    description : "‡πÄ‡∏õ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡πá‡∏ô‡∏ï‡πå",
                    type : ApplicationCommandOptionType.Integer,
                    required : true
                }
            ]
        },
        {
            name : "remove-item",
            description : "‡∏•‡∏ö‡πÑ‡∏≠‡πÄ‡∏ó‡∏°",
            type : ApplicationCommandOptionType.Subcommand,
            options : [
                {
                    name : "gacha-id",
                    description : "ID ‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏™‡∏∏‡πà‡∏°",
                    type : ApplicationCommandOptionType.Integer,
                    required : true
                },{
                    name : "item-id",
                    description : "ID ‡πÑ‡∏≠‡πÄ‡∏ó‡∏°",
                    type : ApplicationCommandOptionType.Integer,
                    required : true
                }
            ]
        }
    ],
    /**
     * @param {Client} client 
     * @param {CommandInteraction} interaction
     */
    run: async(client, interaction) => {
        if(!interaction.memberPermissions.has("Administrator")) return errorReply(interaction, "‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏• ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ");
        const subcommand = interaction.options.data[0].name;
        if(subcommand == "create-gacha"){
            let name = interaction.options.get("name").value;
            let price = interaction.options.get("price").value;
            sql.run(`INSERT INTO gacha_box (name, price) VALUES ('${name}', ${price})`, (err) => {  
                if(err){
                    console.log(err)
                    return errorReply(interaction, "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏ö‡∏≤‡∏á‡∏≠‡∏¢‡πà‡∏≤‡∏á ‡∏Ç‡∏ì‡∏∞‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•");
                }else{
                    sql.get(`SELECT * FROM gacha_box ORDER BY id DESC LIMIT 1`, (err, res) => {
                        if(err) {
                            console.log(err)
                            return errorReply(interaction, "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏ö‡∏≤‡∏á‡∏≠‡∏¢‡πà‡∏≤‡∏á ‡∏Ç‡∏ì‡∏∞‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•");
                        }else{
                            successReply(interaction, `‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏™‡∏∏‡πà‡∏° ${res.name} ID : ${res.id} ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß`);
                        }
                    });
                }
            })
        }
        if(subcommand == "setup-gacha"){
            let gacha_id = interaction.options.get("gacha-id").value;
            sql.get(`SELECT * FROM gacha_box WHERE id = ${gacha_id}`, (err, res) => {
                if(err) {
                    console.log(err)
                    return errorReply(interaction, "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏ö‡∏≤‡∏á‡∏≠‡∏¢‡πà‡∏≤‡∏á ‡∏Ç‡∏ì‡∏∞‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•");
                }else{
                    if(res){
                        let actionRow = new ActionRowBuilder()
                        .setComponents(
                            new ButtonBuilder()
                            .setCustomId(`update_gacha_${gacha_id}`)
                            .setLabel("‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏™‡∏∏‡πà‡∏°")
                            .setStyle(ButtonStyle.Primary)
                            .setEmoji("üîÑ"),

                            new ButtonBuilder()
                            .setCustomId(`delete_gacha_${gacha_id}`)
                            .setLabel("‡∏•‡∏ö‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏™‡∏∏‡πà‡∏°")
                            .setStyle(ButtonStyle.Danger)
                            .setEmoji("üóëÔ∏è")  
                        )

                        let embeds = new EmbedBuilder()
                        .setAuthor({
                            name : `‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏™‡∏∏‡πà‡∏° ${res.name}`,
                            iconURL : "https://cdn-icons-png.flaticon.com/512/3597/3597075.png"
                        }).setDescription("```\n"+res.description+"\n```")
                        .setThumbnail("https://cdn-icons-png.flaticon.com/512/4883/4883370.png")
                        .setColor("#96ffe1")

                        interaction.reply({
                            embeds : [embeds],
                            components : [actionRow],
                            ephemeral : true
                        }).catch(() => {
                            errorReply(interaction, "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ")
                        })
                    }else{
                        return errorReply(interaction, "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏™‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö");
                    }
                }
            })
        }
        if(subcommand == "setup-item"){
            let item_id = interaction.options.get("item-id").value;
            sql.get(`SELECT * FROM gacha_items WHERE id = ${item_id}`, (err, res) => {
                if(err) {
                    console.log(err)
                    return errorReply(interaction, "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏ö‡∏≤‡∏á‡∏≠‡∏¢‡πà‡∏≤‡∏á ‡∏Ç‡∏ì‡∏∞‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•");
                }else{
                    if(res){
                        let actionRow = new ActionRowBuilder()
                        .setComponents(
                            new ButtonBuilder()
                            .setCustomId(`update_item_${item_id}`)
                            .setLabel("‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡πÑ‡∏≠‡πÄ‡∏ó‡∏°")
                            .setStyle(ButtonStyle.Primary)
                            .setEmoji("üîÑ"),

                            new ButtonBuilder()
                            .setCustomId(`delete_item_${item_id}`)
                            .setLabel("‡∏•‡∏ö‡πÑ‡∏≠‡πÄ‡∏ó‡∏°")
                            .setStyle(ButtonStyle.Danger)
                            .setEmoji("üóëÔ∏è")  
                        )

                        let embeds = new EmbedBuilder()
                        .setAuthor({
                            name : `‡πÑ‡∏≠‡πÄ‡∏ó‡∏° ${res.name}`,
                            iconURL : "https://cdn-icons-png.flaticon.com/512/3597/3597075.png"
                        }).setDescription("```\n"+res.description+"\n```")
                        .setThumbnail("https://cdn-icons-png.flaticon.com/512/4883/4883370.png")
                        .setColor("#96ffe1")

                        interaction.reply({
                            embeds : [embeds],
                            components : [actionRow],
                            ephemeral : true
                        }).catch(() => {
                            errorReply(interaction, "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ")
                        })
                    }else{
                        return errorReply(interaction, "‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏ô‡∏µ‡πâ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö");
                    }
                }
            })
        }
        if(subcommand == "create-item"){
            let modal = new ModalBuilder()
            .setTitle("‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏≠‡πÄ‡∏ó‡∏°")
            .setCustomId("create_item")
            .setComponents(
                new ActionRowBuilder()
                .setComponents(
                    new TextInputBuilder()
                    .setCustomId("name")
                    .setPlaceholder("‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏≠‡πÄ‡∏ó‡∏°")
                    .setMinLength(1)
                    .setStyle(TextInputStyle.Short)
                    .setRequired(true)
                    .setLabel("‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏≠‡πÄ‡∏ó‡∏°")
                ),

                new ActionRowBuilder()
                .setComponents(
                    new TextInputBuilder()
                    .setCustomId("url")
                    .setPlaceholder("‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÑ‡∏≠‡πÄ‡∏ó‡∏°")
                    .setMinLength(1)
                    .setStyle(TextInputStyle.Short)
                    .setRequired(true)
                    .setLabel("‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÑ‡∏≠‡πÄ‡∏ó‡∏°")
                ),
                
                new ActionRowBuilder()
                .setComponents(
                    new TextInputBuilder()
                    .setCustomId("description")
                    .setPlaceholder("‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÑ‡∏≠‡πÄ‡∏ó‡∏°")
                    .setMinLength(1)
                    .setStyle(TextInputStyle.Paragraph)
                    .setRequired(true)
                    .setLabel("‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÑ‡∏≠‡πÄ‡∏ó‡∏°")
                ),
                
                new ActionRowBuilder()
                .setComponents(
                    new TextInputBuilder()
                    .setCustomId("command")
                    .setPlaceholder("‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÑ‡∏≠‡πÄ‡∏ó‡∏°")
                    .setMinLength(1)
                    .setStyle(TextInputStyle.Paragraph)
                    .setRequired(true)
                    .setLabel("‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÑ‡∏≠‡πÄ‡∏ó‡∏°")
                )
            )

            interaction.showModal(modal).catch((e) => {
                console.log(e)
                errorReply(interaction, "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ")
            })
        }
        if(subcommand == "add-item"){
            let gacha_id = interaction.options.get("gacha-id").value;
            let item_id = interaction.options.get("item-id").value;
            let rate = interaction.options.get("rate").value;

            sql.get(`SELECT * FROM gacha_box WHERE id = ${gacha_id}`, (err, res) => {
                if(err) {
                    console.log(err)
                    return errorReply(interaction, "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏ö‡∏≤‡∏á‡∏≠‡∏¢‡πà‡∏≤‡∏á ‡∏Ç‡∏ì‡∏∞‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•");
                }else{
                    if(res){
                        sql.get(`SELECT * FROM items WHERE id = ${item_id}`, (err, res) => {
                            if(err) {
                                console.log(err)
                                return errorReply(interaction, "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏ö‡∏≤‡∏á‡∏≠‡∏¢‡πà‡∏≤‡∏á ‡∏Ç‡∏ì‡∏∞‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•");
                            }else{
                                if(res){
                                    sql.get(`SELECT * FROM gacha_items WHERE gacha_box_id = ${gacha_id} AND item_id = ${item_id}`, (err, resG) => {
                                        if(err) {
                                            console.log(err)
                                            return errorReply(interaction, "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏ö‡∏≤‡∏á‡∏≠‡∏¢‡πà‡∏≤‡∏á ‡∏Ç‡∏ì‡∏∞‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•");
                                        }else{
                                            if(resG){
                                                sql.run(`UPDATE gacha_items SET rate = ${rate} WHERE gacha_box_id = ${gacha_id} AND item_id = ${item_id}`, (err) => {  
                                                    if(err){
                                                        console.log(err)
                                                        return errorReply(interaction, "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏ö‡∏≤‡∏á‡∏≠‡∏¢‡πà‡∏≤‡∏á ‡∏Ç‡∏ì‡∏∞‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•");
                                                    }else{
                                                        successReply(interaction, `‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡πÑ‡∏≠‡πÄ‡∏ó‡∏° ${res.name} ID : ${res.id} ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß`);
                                                    }
                                                })
                                            }else{
                                                sql.run(`INSERT INTO gacha_items (gacha_box_id, item_id, rate) VALUES (${gacha_id}, ${item_id}, ${rate})`, (err) => {  
                                                    if(err){
                                                        console.log(err)
                                                        return errorReply(interaction, "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏ö‡∏≤‡∏á‡∏≠‡∏¢‡πà‡∏≤‡∏á ‡∏Ç‡∏ì‡∏∞‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•");
                                                    }else{
                                                        successReply(interaction, `‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏≠‡πÄ‡∏ó‡∏° ${res.name} ID : ${res.id} ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß`);
                                                    }
                                                })
                                            }
                                        }
                                    })
                                }else{
                                    return errorReply(interaction, "‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏ô‡∏µ‡πâ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö");
                                }
                            }
                        })
                    }else{
                        return errorReply(interaction, "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏™‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö");
                    }
                }
            })
        }
        if(subcommand == "remove-item"){
            let gacha_id = interaction.options.get("gacha-id").value;
            let item_id = interaction.options.get("item-id").value;

            sql.get('SELECT * FROM gacha_items WHERE gacha_box_id = ? AND item_id = ?', [gacha_id, item_id], (err, res) => {
                if(err) {
                    console.log(err)
                    return errorReply(interaction, "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏ö‡∏≤‡∏á‡∏≠‡∏¢‡πà‡∏≤‡∏á ‡∏Ç‡∏ì‡∏∞‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•");
                }else{
                    if(res){
                        sql.run(`DELETE FROM gacha_items WHERE gacha_box_id = ${gacha_id} AND item_id = ${item_id}`, (err) => {  
                            if(err){
                                console.log(err)
                                return errorReply(interaction, "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏ö‡∏≤‡∏á‡∏≠‡∏¢‡πà‡∏≤‡∏á ‡∏Ç‡∏ì‡∏∞‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•");
                            }else{
                                successReply(interaction, `‡∏•‡∏ö‡πÑ‡∏≠‡πÄ‡∏ó‡∏° ID : ${item_id} ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß`);
                            }
                        })
                    }else{
                        return errorReply(interaction, "‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏ô‡∏µ‡πâ‡πÉ‡∏ô‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏™‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ");
                    }
                }
            })
        }
    }
}